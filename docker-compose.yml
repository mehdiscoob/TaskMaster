version: '3.8'

networks:
  laravel-network:
    driver: bridge

volumes:
  mysql_data:

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 2s
      retries: 3
    env_file:
      - .env.${ENV_TYPE}   # Stage or Prod
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel-network

  laravel-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_ENV=${ENV_TYPE}   # Build-time: staging or production
    container_name: laravel-app
    restart: unless-stopped
    env_file:
      - .env.${ENV_TYPE}   # Runtime env inject
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - laravel-network
    expose:
      - "9000"
    command: php-fpm

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx
    restart: unless-stopped
    depends_on:
      - laravel-app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - laravel-network
